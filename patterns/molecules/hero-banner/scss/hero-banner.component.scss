////
/// A template for a hero banner
////

// Decant
@import "decanter/core/utilities/decanter-utilities";

// Grab our mixins & config.
@import "patterns/utilities/utilities";

// OOO Issue with the variables being translated too early.
$default-container: (
  xs: (
    columns: 12,
    grid-media: $media-xs-only,
    v-space: 1em,
    max-width: false,
    grid-collapse: false
  ),
  sm: (
    columns: 12,
    grid-media: $media-sm-only,
    v-space: 1em,
    max-width: false,
    grid-collapse: false
  ),
  md: (
    columns: 12,
    grid-media: $media-md-only,
    v-space: 1em,
    max-width: false,
    grid-collapse: false
  ),
  lg: (
    columns: 12,
    grid-media: $media-lg-only,
    v-space: 1em,
    max-width: false,
    grid-collapse: false
  ),
  xl: (
    columns: 12,
    grid-media: $media-xl,
    v-space: 1em,
    max-width: true,
    grid-collapse: false
  ),
  print: (
    columns: 12,
    grid-media: $media-print,
    v-space: 1em,
    max-width: false,
    grid-collapse: false
  )
);

// Variables.
$hero-max-width: 1380px;

// Mixins

/// centered-abs-container mixin
/// Creates a wrapper-less centered container using padding
/// Depends on Neat. We use the global neat-grid variable for grid default, but you may pass it any value.
/// @require _set-container-padding
/// @require $neat-grid
///
/// @link http://neat.bourbon.io Neat
@mixin centered-abs-container(
  $columns: null,
  $v-space: 1em,
  $max-width: false,
  $grid-collapse: false,
  $grid: $neat-grid
) {
  $columns: _neat-column-default(
    $grid,
    $columns
  ); // Retrieves max columns from specified grid if empty, or the specified number of columns otherwise
  $_grid-columns: _retrieve-neat-setting(
    $grid,
    columns
  ); // Retrieves the number of max columns from the specified grid
  $_grid-gutter: _retrieve-neat-setting(
    $grid,
    gutter
  ); // Retrieves the gutter from the specified grid

  @include grid-container;
  @if $grid-collapse == true {
    @include grid-collapse($grid);
  }

  left: _set-container-padding($columns, $grid, $max-width);
  //right: _set-container-padding($columns, $grid, $max-width);
}

/// Responsive container
/// Creates a responsive container on each grid media as specified by the specified map
@mixin responsive-abs-container($container: null) {
  @each $breakpoint, $_map in $container {
    $_cols: map-get($_map, columns);
    $_grid: map-get($_map, grid-media);
    $_v-space: map-get($_map, v-space);
    $_max-width: map-get($_map, max-width);
    $_grid-collapse: map-get($_map, grid-collapse);

    @include grid-media($_grid) {
      @include centered-abs-container(
        $_cols,
        $_v-space,
        $_max-width,
        $_grid-collapse,
        $_grid
      );
    }
  }
}

// Styles

%absolute-fill {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

.hero-banner {
  background-color: color(charcoal);
  position: relative;

  &.has-tint {
    .image::before {
      @extend %absolute-fill;
      content: "";
      display: block;
      background-color: rgba(0, 0, 0, 0.35);
      position: absolute;
      width: 100%;
      height: 100%;
    }
  }

  .image,
  .entity-reference {
    position: absolute;
    width: 100%;
    height: 100%;

    img,
    picture {
      object-fit: cover;
      object-position: 50% 50%;
      height: 100%;
      width: 100%;
    }
  }

  &.has-video {
    .hero-banner__inner {
      position: absolute;
      z-index: 2;
      width: 100%;
      height: 100%;
      top: 0;
      pointer-events: none;
    }

    &.component-centered-container-margins {
      .video {
        margin-bottom: em(58px);
      }
    }
  }

  article.contextual-region {
    position: unset;
  }
}

.hero-banner__inner {
  @include grid-container;
  position: relative;
  max-width: $hero-max-width;
  margin: 0 auto;
  min-height: 500px;

  @include grid-media($media-md) {
    min-height: 300px;
  }

  @include grid-media($media-lg) {
    min-height: 400px;
    max-width: none;
  }

  &.is-tall {
    @include grid-media($media-md) {
      min-height: 500px;
    }

    @include grid-media($media-lg) {
      min-height: 660px;
    }
  }

  .has-video & {
    min-height: 0;
  }
}

.hero-banner__container {
  @extend %absolute-fill;
}

.hero-banner__header {
  @include center-transform;
  color: color(white);
  text-align: center;
  width: 80%;

  @include grid-media($media-md) {
    width: 50%;
  }

  @include grid-media($media-lg) {
    width: 25%;
  }

  &.is-right {
    @include grid-media($media-md) {
      width: 100%;
      max-width: $hero-max-width;
      text-align: right;
      padding-right: 60px;
    }

    @include grid-media($media-lg) {
      padding-right: 40px;
    }

    @include grid-media($media-xl) {
      padding-right: 40px;
      margin: 0 auto;
    }

    .hero-banner__hgroup {
      padding-top: 40px;

      @include grid-media($media-md) {
        float: right;
        padding-top: 0;
        width: 90%;
      }

      @include grid-media($media-lg) {
        float: right;
        padding-top: 0;
        width: 50%;
      }
    }
  }

  .cite {
    padding-top: 2em;
    margin-bottom: 1em;
  }
}
