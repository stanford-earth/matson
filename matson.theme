<?php

/**
 * @file
 * Preprocess functions for matson.
 */

use Drupal\Core\Cache\CacheableMetadata;

/**
 * Prepares variables for the html.html.twig template.
 */
function matson_preprocess_html(&$variables) {

}

/**
 * Prepares variables for the field.html.twig template.
 */
function matson_preprocess_field(&$variables, $hook) {

}

/**
 * Prepares non node/panel pages to be in a single column.
 */
function matson_preprocess_page(&$vars) {
  // Nothing to see here.
}

/**
 * In some cases, the asset library is not associated with a certain part of the
 * page, because it is associated with the entire page. For this case,
 * hook_page_attachments() exists. A clear example can be found in the
 * Contextual Links module.
 */
function matson_page_attachments_alter(array &$attachments) {

  $node = \Drupal::routeMatch()->getParameter('node');
  if (is_object($node)) {
    $type = $node->getType();
    switch ($type) {
      case 'complex_page':
        $attachments['#attached']['library'][] = 'matson/stanford_complex_page';
        break;

      case 'stanford_department':
        $attachments['#attached']['library'][] = 'matson/stanford_department';
        break;

      case 'stanford_news':
        $attachments['#attached']['library'][] = 'matson/stanford_news';
        break;
    }
  }

  // Attach home page library.
  $is_front = \Drupal::service('path.matcher')->isFrontPage();
  if ($is_front) {
    $attachments['#attached']['library'][] = 'matson/home';
  }

}

/*
 * Passes custom variables to blocks, eg. the main menu
 * To print a custom variable (eg. foo) in twig: {{ foo }}
 */
function matson_preprocess_block(&$vars) {

}

/**
 * Block template suggestions.
 * @param  array  $suggestions [description]
 * @param  array  $variables   [description]
 * @return [type]              [description]
 */
// function matson_theme_suggestions_block_alter(array &$suggestions, array $variables) {
//   $block = $variables['elements'];
//   $blockType = $block['#configuration']['provider'];
//   if ($blockType == "block_content") {
//     $bundle = $block['content']['#block_content']->bundle();
//     array_splice($suggestions, 2, 0, 'block__' . $bundle);
//   }
// }
